% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/moderate.r
\name{moderate}
\alias{moderate}
\title{moderate}
\usage{
moderate(m, ..., moderators = NULL, na.adjust = TRUE, store_var = NULL)
}
\arguments{
\item{m}{a meta3L object}

\item{...}{a named list of moderators}

\item{moderators}{You can feed a named character vector for consistent moderators across models}

\item{na.adjust}{a bool. Should the baseline model be adjusted to use the same data as a moderated model when
missing covariate data is present}

\item{store_var}{a list containing expressions named 'within', and 'between'. See details...}
}
\description{
Create a list of meta3L objects moderated by predictors
}
\details{
Moderate runs a series of metaKIN::mlm models. When missing data is present in a moderator matrix, it is also removed from the baseline model for a given comparison.
}
\section{store_var}{

Sometimes features about the dataset which underlies a model are not included in the meta-analysis but are of interest. For example, it is sometimes desirable to report the number of participants included in a meta-analytic model. In such cases the argument 'store_var' can help. store_var needs to be provided a list with two named objects 'within' and 'between'. Each object must contain an expression. For within, this expression is passed (minus the `~`) to data.table to be evaluated by cluster. E.g., ~ max(n, na.rm = TRUE). The variable of interest must be specified in 'within'. Between then operates on those results. `.` must be used as a stand-in for the results returned by within. For example, to take the max of all n by cluster, and then to sum the results, the following store_var code can be used:
store_var = list(within = ~ max(n, na.rm = TRUE), between = ~ sum(., na.rm = TRUE)). The results of these two functions are saved in an attribute ("store_var") in the output mlm models.
}

